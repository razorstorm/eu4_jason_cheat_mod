change_all_provinces_to_gold = {
    every_owned_province = {
        limit = {
            NOT = { trade_goods = gold }
            NOT = { trade_goods = silver }
        }
        change_trade_goods = gold
    }
}

set_high_dev_cost_reduction_on_prov = {
    add_province_modifier = {
        name = jason_dev_cost_reduction_350_1
        duration = -1
    }
    add_province_modifier = {
        name = jason_dev_cost_reduction_100_1
        duration = -1
    }
    add_province_modifier = {
        name = jason_dev_cost_reduction_100_2
        duration = -1
    }    
}

set_high_dev_cost_reduction_on_all_gold_and_silver_prov = {
    every_owned_province = {
        limit = {
            OR = {
                trade_goods = gold
                trade_goods = silver
            }
        }
        set_high_dev_cost_reduction_on_prov = yes
    }
}

set_high_dev_resource_gathering_operation = {
    if = {
        limit = {
            NOT = {
                # Ignore provinces that are already highly devved 
                base_production = 25
            }
        }
        set_base_tax = 20
        set_base_production = 25
        set_base_manpower = 15
    }
        
    set_local_autonomy = 0
}

set_high_dev_on_all_gold_prov = {
    every_owned_province = {
        limit = {
            OR = {
                trade_goods = gold
                trade_goods = silver
            }
            NOT = {
                # Ignore provinces that are already highly devved 
                base_production = 25
            }
        }
        set_high_dev_resource_gathering_operation = yes
    }
}

set_high_dev_on_all_dimaond_prov = {
    every_owned_province = {
        limit = {
            OR = {
                trade_goods = gold
                trade_goods = silver
            }
            NOT = {
                # Ignore provinces that are already highly devved 
                base_production = 25
            }
        }
        set_high_dev_resource_gathering_operation = yes
    }
}

set_high_diamond_dev = {
    set_high_dev_on_all_dimaond_prov = yes
    every_subject_country = {
        set_high_dev_on_all_dimaond_prov = yes
    }
}

set_high_gold_dev = {
    set_high_dev_on_all_gold_prov = yes
        
    every_subject_country = {
        set_high_dev_on_all_gold_prov = yes
    }
}

set_high_defensiveness_on_prov = {
    add_province_modifier = {
        name = jason_mod_more_garrison
        duration = -1
    }
    add_province_modifier = {
        name = jason_mod_more_garrison_huge
        duration = -1
    }
    add_province_modifier = {
        name = jason_mod_more_garrison_growth
        duration = -1
    }
    add_province_modifier = {
        name = jason_mod_more_fort
        duration = -1
    }
    # log = "Added Defensiveness on Province [This.GetName]" # This stackoverflows for some reason
}

remove_high_defensiveness_on_prov = {
    remove_province_modifier = jason_mod_more_garrison
    remove_province_modifier = jason_mod_more_garrison_huge
    remove_province_modifier = jason_mod_more_garrison_growth
    remove_province_modifier = jason_mod_more_fort
}

set_high_defensiveness_on_country = {
    add_country_modifier = {
        name = jason_mod_more_garrison
        duration = -1
    }
    add_country_modifier = {
        name = jason_mod_more_garrison_huge
        duration = -1
    }
    add_country_modifier = {
        name = jason_mod_more_garrison_growth
        duration = -1
    }
    add_country_modifier = {
        name = jason_mod_more_fort
        duration = -1
    }
}

remove_high_defensiveness_on_country = {
    remove_country_modifier = jason_mod_more_garrison
    remove_country_modifier = jason_mod_more_garrison_huge
    remove_country_modifier = jason_mod_more_garrison_growth
    remove_country_modifier = jason_mod_more_fort
}

fix_zero_dev = {
    every_province = {
        if = {
            limit = {
                NOT = {
                    base_manpower = 1
                }
            }
            add_base_manpower = 1
        }
        if = {
            limit = {
                NOT = {
                    base_tax = 1
                }
            }
            add_base_tax = 1
        }
        if = {
            limit = {
                NOT = {
                    base_production = 1
                }
            }
            add_base_production = 1
        }
    }
}

extend_golden_age_by_one_year = {
    extend_golden_age = 12 # 1 more year
}

reduce_gold_depletion_chance_on_country_and_subjects = {
    add_country_modifier = { 
        name = gold_depletion_cheat
        duration = -1  
    }
    every_subject_country = {
        add_country_modifier = { 
            name = gold_depletion_cheat
            duration = -1  
        }
    }
}

set_build_time_reduction_on_country_and_subjects = {
    add_country_modifier = { 
        name = jason_mod_lessTime
        duration = -1  
    }

    add_country_modifier = {
        name = jason_global_more_building_slots
        duration = -1
    }

    every_subject_country = {
        add_country_modifier = { 
            name = jason_mod_lessTime
            duration = -1  
        }

        add_country_modifier = {
            name = jason_global_more_building_slots
            duration = -1
        }
    }
}

set_supply_cheat_on_country_and_subjects = {
    add_country_modifier = {
        name = jason_global_more_building_slots
        duration = -1
    }
    add_country_modifier = {
        name = supply_cheat_modifier
        duration = -1
    }

    every_subject_country = {
        add_country_modifier = {
            name = jason_global_more_building_slots
            duration = -1
        }
        add_country_modifier = {
            name = supply_cheat_modifier
            duration = -1
        }
    }
}

prov_trade_power = {
    add_province_modifier = {
        name = province_trade_power_modifier_cheat
        duration = -1
    }
    center_of_trade = 3
    add_center_of_trade_level = 3
}

set_prov_trade_power_on_all_cot = {
    every_owned_province = {
        limit = {
            province_has_center_of_trade_of_level = 1
            OR = {
                NOT = {
                    has_province_modifier = province_trade_power_modifier_cheat
                    base_production = 20
                    base_tax = 15
                    base_manpower = 10
                }
                local_autonomy = 1
            }
        }
        add_province_modifier = {
            name = province_trade_power_modifier_cheat
            duration = -1
        }
        set_local_autonomy = 0
        if = {
            limit = {
                NOT = {
                    base_production = 20
                }
            }
            set_base_production = 20
        }
        if = {
            limit = {
                NOT = {
                    base_tax = 15
                }
            }
            set_base_tax = 15
        }
        if = {
            limit = {
                NOT = {
                    base_manpower = 10
                }
            }
            set_base_manpower = 10
        }
    }
}

set_prov_trade_power_on_all = {
    every_owned_province = {
        add_province_modifier = {
            name = province_trade_power_modifier_cheat
            duration = -1
        }
        set_local_autonomy = 0
        if = {
            limit = {
                NOT = {
                    base_production = 30
                }
            }
            set_base_production = 30
        }
    }
}

set_prov_trade_power_on_all_cot_for_country_and_subjects = {
    set_prov_trade_power_on_all_cot = yes
    every_subject_country = {
        set_prov_trade_power_on_all_cot = yes
    }
}

convert_trade_company_provinces = {
    # Conversion of trade company provinces if country is not confucian
    if = {
        limit = {
            NOT = {
                religion = confucianism
            }
        }
        every_owned_province = {
            limit = {
                is_owned_by_trade_company = yes
            }
            change_religion = owner  
        }
    }
}

convert_trade_company_provinces_for_country_and_subjects = {
    convert_trade_company_provinces = yes
    every_subject_country = {
        convert_trade_company_provinces = yes
    }
}

set_prov_trade_power_on_all_for_country_and_subjects = {
    set_prov_trade_power_on_all = yes
    every_subject_country = {
        set_prov_trade_power_on_all = yes
    }
}

marry_all_christians = {
    every_country = {
        limit = {
            OR = {
                religion = catholic
                religion = orthodox
                religion = coptic
                religion = protestant
                religion = reformed
    
                religion_group = christian
            }
            NOT = { marriage_with = ROOT }
        }
        ROOT = {
            create_marriage = PREV
            add_legitimacy = 2
        }
    }    
}

marry_everyone = {
    every_country = {
        limit = {
            NOT = { marriage_with = ROOT }
        }
        ROOT = {
            create_marriage = PREV
            add_legitimacy = 2
        }
    } 
}

upgrade_all_cot_to_level_2 = {
    every_owned_province = {
        limit = {
            province_has_center_of_trade_of_level = 1
            NOT = {
                province_has_center_of_trade_of_level = 2
            }
            owner = {
                treasury = 200
            }
        }
        add_center_of_trade_level = 1
        owner = {
            add_treasury = -200
        }
    }

    every_subject_country = {
        every_owned_province = {
            limit = {
                province_has_center_of_trade_of_level = 1
                NOT = {
                    province_has_center_of_trade_of_level = 2
                }
                owner = {
                    overlord = {
                        treasury = 200
                    }
                }
            }
            add_center_of_trade_level = 1
            owner = {
                overlord = {
                    add_treasury = -200
                }
            }
        }
    }
}

upgrade_all_cot_to_level_3 = {
    every_owned_province = {
        limit = {
            province_has_center_of_trade_of_level = 1
            NOT = {
                province_has_center_of_trade_of_level = 3
            }
            owner = {
                treasury = 1000
            }
        }
        add_center_of_trade_level = 1
        owner = {
            add_treasury = -1000
        }
    }

    every_subject_country = {
        every_owned_province = {
            limit = {
                province_has_center_of_trade_of_level = 1
                NOT = {
                    province_has_center_of_trade_of_level = 3
                }
                owner = {
                    overlord = {
                        treasury = 1000
                    }
                }
            }
            add_center_of_trade_level = 1
            owner = {
                overlord = {
                    treasury = -1000
                }
            }
        }
    }
}

set_owned_specific_provinces_to_gold = {
    every_province = {
        limit = {
            country_or_subject_holds = ROOT
            is_specific_gold_staked_province = yes
            NOT = { trade_goods = gold }
        }
        change_trade_goods = gold
    }
}

set_owned_specific_provinces_to_diamonds = {
    every_province = {
        limit = {
            country_or_subject_holds = ROOT
            is_specific_diamond_staked_province = yes
            NOT = { trade_goods = diamonds }
        }
        change_trade_goods = diamonds
    }
}

set_precious_provinces_to_zero_autonomy = {
    every_province = {
        limit = {
            country_or_subject_holds = ROOT
            is_valuable_goods_producing_province = yes
        }
        add_province_modifier = {
            name = local_autonomy_cheat
            duration = -1
        }
        set_local_autonomy = 0
    }
}
set_all_provinces_to_zero_autonomy = {
    every_province = {
        limit = {
            country_or_subject_holds = ROOT
        }
        add_province_modifier = {
            name = local_autonomy_cheat
            duration = -1
        }
        set_local_autonomy = 0
    }
}

automatic_max_tariffs = {
    every_subject_country = {
        add_tariff_value = 1000
    }
}

automatic_reduce_half_tariffs = {
    every_subject_country = {
        add_tariff_value = -0.5
    }
}

end_all_wars_amongst_subjects = {
    # Blocking all wars amongst subjects
    every_subject_country = {
        save_event_target_as = subject
        overlord = {
            every_subject_country = {
                white_peace = event_target:subject 
                add_truce_with = event_target:subject 
            }
        }

        remove_opinion = {
            who = ROOT
            modifier = opinion_annex_vassal
        }
    }
}

reset_subject_annexer_opinion = {
    remove_country_modifier = annexers_legacy
    every_subject_country = {
        remove_opinion = {
            who = overlord
            modifier = opinion_annex_vassal
        }
    }
}

discover_all_subject_lands = {
    every_subject_country = {
        every_owned_province = {
            discover_country = ROOT
        }
    }
}

subjects_discover_each_other_lands = {
    every_subject_country = {
        save_event_target_as = subject_country
        overlord = {
            every_subject_country = {
                every_owned_province = {
                    discover_country = event_target:subject_country
                }
            }
            every_owned_province = {
                discover_country = event_target:subject_country
            }
        }
    }
}

manage_subject_relations_share_maps_and_enforce_peace = {
    end_all_wars_amongst_subjects = yes
    reset_subject_annexer_opinion = yes
    discover_all_subject_lands = yes

    subjects_discover_each_other_lands = yes
}

remove_overlapping_cores_and_claims_between_overlord_and_subject = {
    every_subject_country = {
        save_event_target_as = subject
        overlord = {
            every_owned_province = {
                limit = {
                    OR = {
                        is_core = event_target:subject
                        is_claim = event_target:subject
                        is_permanent_claim = event_target:subject
                    }
                }
    
                # log = "Removing Subject core/claim from [This.GetName]"
                remove_core = event_target:subject
                remove_claim = event_target:subject
            }
        }
        every_owned_province = {
            limit = {
                OR = {
                    is_core = ROOT
                    is_claim = ROOT
                    is_permanent_claim = ROOT
                }
            }
    
            # log = "Removing Root core/claim from subject in [This.GetName]"
            remove_core = ROOT
            remove_claim = ROOT
        }
    }
}

set_gold_to_slaves = {
    every_owned_province = {
        limit = {
            trade_goods = gold
        }
        change_trade_goods = slaves
    }
}

set_all_foreign_countries_to_no_trade_power = {
    every_country = {
        limit = {
            NOT = {
                tag = AKS
            }
            NOT = {
                is_subject_of = AKS
            }
        }
        add_country_modifier = {
            name = jason_global_foreign_trade_power_reduction_100000
            duration = -1
        } 
        add_country_modifier = {
            name = jason_global_own_trade_power_reduction_100000
            duration = -1
        } 
    }

    remove_country_modifier = jason_global_foreign_trade_power_reduction_100000
    remove_country_modifier = jason_global_own_trade_power_reduction_100000

    every_subject_country = {
        remove_country_modifier = jason_global_foreign_trade_power_reduction_100000
        remove_country_modifier = jason_global_own_trade_power_reduction_100000
    }
}

set_owned_slave_provinces_to_gold = {
    every_province = {
        limit = {
            country_or_subject_holds = ROOT
            trade_goods = slaves
        }
        change_trade_goods = gold
    }
}

discover_lake_provinces = {
    #Lakes:
    # Lakes are not included in any areas nor regions in the game so we have to discover them individually
    #central_asian_lakes_area
    1326 = {
        discover_country = ROOT
    }
    1327 = {
        discover_country = ROOT
    }
    1653 = {
        discover_country = ROOT
    }
    1654 = {
        discover_country = ROOT
    }
    1888 = {
        discover_country = ROOT
    }

    #chinese_lakes_area
    1655 = {
        discover_country = ROOT
    }
    1895 = {
        discover_country = ROOT
    }
    1896 = {
        discover_country = ROOT
    }
    1897 = {
        discover_country = ROOT
    }
    1898 = {
        discover_country = ROOT
    }
    2000 = {
        discover_country = ROOT
    }
    2001 = {
        discover_country = ROOT
    }

    #baltic_lakes_area
    1260 = {
        discover_country = ROOT
    }
    1261 = {
        discover_country = ROOT
    }
    1262 = {
        discover_country = ROOT
    }
    1250 = {
        discover_country = ROOT
    }
    1251 = {
        discover_country = ROOT
    }
    1883 = {
        discover_country = ROOT
    }
    1884 = {
        discover_country = ROOT
    }
    1885 = {
        discover_country = ROOT
    }
    1886 = {
        discover_country = ROOT
    }
    1887 = {
        discover_country = ROOT
    }
    1977 = {
        discover_country = ROOT
    }
    2953 = {
        discover_country = ROOT
    }

    #african_lakes_area
    1648 = {
        discover_country = ROOT
    }
    1649 = {
        discover_country = ROOT
    }
    1650 = {
        discover_country = ROOT
    }
    1651 = {
        discover_country = ROOT
    }
    1899 = {
        discover_country = ROOT
    }
    1900 = {
        discover_country = ROOT
    }
    1976 = {
        discover_country = ROOT
    }
    2471 = {
        discover_country = ROOT
    }

    #north_american_lake_area
    1658 = {
        discover_country = ROOT
    }
    1659 = {
        discover_country = ROOT
    }
    1660 = {
        discover_country = ROOT
    }
    1661 = {
        discover_country = ROOT
    }
    1662 = {
        discover_country = ROOT
    }
    1663 = {
        discover_country = ROOT
    }
    1664 = {
        discover_country = ROOT
    }
    1665 = {
        discover_country = ROOT
    }
    1903 = {
        discover_country = ROOT
    }
    1904 = {
        discover_country = ROOT
    }
    1905 = {
        discover_country = ROOT
    }
    1906 = {
        discover_country = ROOT
    }
    1907 = {
        discover_country = ROOT
    }
    1908 = {
        discover_country = ROOT
    }
    1909 = {
        discover_country = ROOT
    }
    1910 = {
        discover_country = ROOT
    }
    1911 = {
        discover_country = ROOT
    }
    1912 = {
        discover_country = ROOT
    }
    1913 = {
        discover_country = ROOT
    }
    1914 = {
        discover_country = ROOT
    }
    1915 = {
        discover_country = ROOT
    }
    1916 = {
        discover_country = ROOT
    }
    1917 = {
        discover_country = ROOT
    }
    1923 = {
        discover_country = ROOT
    }
    1918 = {
        discover_country = ROOT
    }
    1919 = {
        discover_country = ROOT
    }
    1920 = {
        discover_country = ROOT
    }
    1921 = {
        discover_country = ROOT
    }
    1922 = {
        discover_country = ROOT
    }
    4940 = {
        discover_country = ROOT
    }
    4941 = {
        discover_country = ROOT
    }

    #central_european_lakes_area
    1325 = {
        discover_country = ROOT
    }
    1889 = {
        discover_country = ROOT
    }
    1890 = {
        discover_country = ROOT
    }

    #caucasian_lakes_area
    1891 = {
        discover_country = ROOT
    }
    1892 = {
        discover_country = ROOT
    }
    1893 = {
        discover_country = ROOT
    }
    1894 = {
        discover_country = ROOT
    }

    #south_american_lakes_area
    1656 = {
        discover_country = ROOT
    }
    1657 = {
        discover_country = ROOT
    }
    1902 = {
        discover_country = ROOT
    }
}

discover_continents = {
    europe = {
        discover_country = ROOT
    }
    asia = {
        discover_country = ROOT
    }
    africa = {
        discover_country = ROOT
    }
    north_america = {
        discover_country = ROOT
    }
    south_america = {
        discover_country = ROOT
    }
    oceania = {
        discover_country = ROOT
    }
    island_check_provinces = {
        discover_country = ROOT
    }
    new_world = {
        discover_country = ROOT
    }
}

discover_oceans_and_seas = {
    west_american_sea_superregion = {
        discover_country = ROOT
    }
    east_american_sea_superregion = {
        discover_country = ROOT
    }
    north_european_sea_superregion = {
        discover_country = ROOT
    }
    south_european_sea_superregion = {
        discover_country = ROOT
    }
    west_african_sea_superregion = {
        discover_country = ROOT
    }
    east_african_sea_superregion = {
        discover_country = ROOT
    }
    indian_pacific_sea_superregion = {
        discover_country = ROOT
    }
    north_pacific_sea_superregion = {
        discover_country = ROOT
    }
}

discover_world = {
    discover_continents = yes
    discover_oceans_and_seas = yes
    discover_lake_provinces = yes
}

upgrade_ruler = {
    change_adm = 6
    change_dip = 6
    change_mil = 6

    add_ruler_personality = ruler_of_destiny_personality
    add_ruler_personality = immortal_personality
    add_ruler_personality = legendary_conqueror_personality
    add_ruler_personality = scholar_personality
}

make_immortal_ruling_family = {
    upgrade_ruler = yes

    if = {
        limit = {
            OR = {
                has_ruler = no
                NOT = { adm = 6 }
                NOT = { dip = 6 }
                NOT = { mil = 6 }
            }
        }

        define_ruler = {
            dynasty = ROOT
            culture = ROOT
            religion = ROOT
            adm = 10
            dip = 10
            mil = 10
            male = yes
            fixed = yes
        }
    }

    if = {
        limit = {
            OR = {
                has_consort = no
                NOT = { consort_adm = 6 }
                NOT = { consort_dip = 6 }
                NOT = { consort_mil = 6 }
            }
        }

        define_consort = {
            culture = ROOT
            adm = 6
            dip = 6
            mil = 6
            female = yes
        }

        add_queen_personality = immortal_personality
    }

    if = {
        limit = {
            OR = {
                has_heir = no
                NOT = { heir_adm = 6 }
                NOT = { heir_dip = 6 }
                NOT = { heir_mil = 6 }
            }
        }

        define_heir = {
            culture = ROOT
            dynasty = ROOT
            claim = 100
            adm = 6
            dip = 6
            mil = 6
            female = no
        }

        add_heir_personality = immortal_personality
    }
    
    if = {
        limit = {
            NOT = {
                has_country_flag = fee_events_for_student_of_language_active 
            }
            NOT = {
                has_ruler_modifier = fee_advisor_multilingual_ruler
            }
        }
        add_ruler_modifier = {
            name = fee_ruler_trait_diligent
            duration = -1
        }
        add_ruler_modifier = {
            name = fee_ruler_trait_patient
            duration = -1
        }
        add_ruler_modifier = {
			name = fee_advisor_student_language
			duration = -1
		}
        add_ruler_modifier = {
			name = fee_advisor_multilingual_ruler
			duration = -1
		}
        set_country_flag = fee_events_for_student_of_language_active
    }
    if = {
        limit = {
            has_consort = yes
            NOT = { has_ruler_modifier = consort_of_the_people } 
        }
		add_ruler_modifier = { 
			name = consort_of_the_people
		}
    }
}

set_initialize_cheats = {
    add_country_modifier = { 
        name = mod_more_dip_upkeep
        duration = -1  
    }
    add_country_modifier = { 
        name = jason_mod_lessTime
        duration = -1  
    }
    add_country_modifier = {
        name = jason_global_more_building_slots
        duration = -1
    }
    add_country_modifier = { 
        name = jason_mod_faster_envoy
        duration = -1  
    }
    
    add_country_modifier = {
        name = jason_mod_less_attrition
        duration = -1  
    }
    
    add_country_modifier = {
        name = jason_mod_more_tradition
        duration = -1  
    }
    
    add_country_modifier = {
        name = jason_mod_more_dip_upkeep
        duration = -1  
    }
    
    add_country_modifier = {
        name = jason_mod_extremely_more_dip_upkeep
        duration = -1
    }
    
    add_country_modifier = { 
        name = more_diplomats
        duration = -1  
    }
    
    add_country_modifier = { 
        name = jason_mod_more_dips
        duration = -1  
    }
    
    add_country_modifier = {
        name = client_states_cheat
        duration = -1
    }
    
    # 2 flagships
    add_country_modifier = {
        name = ned_one_world
        duration = -1
    }
    
    ##########################################################################
    # Supply
    ##########################################################################
    
    add_country_modifier = {
        name = supply_cheat_modifier
        duration = -1
    }
    
    ##########################################################################
    # Range
    ##########################################################################
    
    add_country_modifier = {
        name = jason_mod_more_trade_range
        duration = -1
    }
    
    ##########################################################################
    # Policy Slots
    ##########################################################################
    
    add_country_modifier = {
        name = jason_more_policy_slots
        duration = -1
    }
    
    ##########################################################################
    # Envoy Travel Speed
    ##########################################################################
     
    add_country_modifier = {
        name = envoy_travel_time_cheats
        duration = -1
    }
    add_country_modifier = { 
        name = emissary_authority
        duration = -1
    }
    
    
    ##########################################################################
    # Ruler
    ##########################################################################
    
    if = {
        limit = {
            is_a_persian_tag = yes
        }
        define_ruler = {
            culture = ROOT
            religion = ROOT
            adm = 10
            dip = 10
            mil = 10
            male = yes
            name = "Ismail I"
            fixed = yes
        }
    }
    else_if = {
        limit = {
            OR = {
                tag = ENG
                tag = GBR
            }
        }
        define_ruler = {
            dynasty = "Lancaster"
            culture = ROOT
            religion = ROOT
            adm = 10
            dip = 10
            mil = 10
            male = yes
            name = "Henry V"
            fixed = yes
        }
    }
    else_if = {
        limit = {
            tag = MJZ
        }
        define_ruler = {
            dynasty = ROOT
            culture = ROOT
            religion = ROOT
            adm = 10
            dip = 10
            mil = 10
            male = yes
            name = "Kangxi"
            fixed = yes
        }
    }
    else_if = {
        limit = {
            OR = {
                tag = BYZ
                tag = NHS
            }
        }
        define_ruler = {
            dynasty = "Palaiologos"
            culture = ROOT
            religion = ROOT
            adm = 10
            dip = 10
            mil = 10
            male = yes
            name = "Constantine XII \"The Great\""
            fixed = yes
        }
    }
    else_if = {
        limit = {
            OR = {
                tag = ETH
            }
        }
        define_ruler = {
            dynasty = ROOT
            culture = ROOT
            religion = ROOT
            adm = 10
            dip = 10
            mil = 10
            male = yes
            name = "Menelik II \"The Divine\""
            fixed = yes
        }
    }
    else_if = {
        limit = {
            tag = AZT
        }
        # Don't create new ruler, but make sure to set the montezuma flag if it somehow got unset.
        set_ruler_flag = azt_montezuma    
    }
    else = {
        define_ruler = {
            dynasty = ROOT
            culture = ROOT
            religion = ROOT
            adm = 10
            dip = 10
            mil = 10
            male = yes
            fixed = yes
        }
    }

    upgrade_ruler = yes
    
    
    # Adding advisor pool
    add_country_modifier = { 
        name = ger_chancellorship
        duration = -1  
    }
    add_country_modifier = { 
        name = tur_reign_of_women_modifier
        duration = -1  
    }
    
    
    ##########################################################################
    # Army Professionalism | (1% yearly)
    ##########################################################################
    
    add_country_modifier = { 
        name = mng_yu_qian_manual_modifier
        duration = -1  
    }
    
    ##########################################################################
    # Culture Convert | culture_convert.txt
    ##########################################################################
    
    add_country_modifier = {
        name = culture_conversion_cost_cheat
        duration = -1
    }
    
    add_country_modifier = {
        name = jason_mod_more_culture_speed
        duration = -1
    }
    
    
    ##########################################################################
    # Absolutism | abs.txt
    ##########################################################################
    
    add_country_modifier = {
        name = absolutism_cheat
        duration = -1
    }
    add_country_modifier = {
        name = jason_mod_more_absolutism_max
        duration = -1  
    }
    
    
    ##########################################################################
    # Ship Build times
    ##########################################################################
    
    every_owned_province = {
        limit = {
            has_port = yes
        }
        add_country_modifier = {
            name = global_ship_recruit_speed_cheat
            duration = -1
        }
        # add_province_modifier = {
        #     name = global_ship_recruit_speed_cheat
        #     duration = -1
        # }
        add_province_modifier = {
            name = local_ship_recruit_speed_cheat
            duration = -1
        }
    }
    
    
    ##########################################################################
    # Capital Metropolis
    ##########################################################################
    
    capital_scope = {
        set_base_tax = 20
        set_base_production = 25
        set_base_manpower = 15
    }
    
    
    ##########################################################################
    # Tributary Power          
    ##########################################################################
    add_country_modifier = {
        name = mng_reformed_tributary_obligation_system_modifier
        duration = -1
    }
    
    
    ##########################################################################
    # Infinite generals | leaders.txt    
    ##########################################################################
    add_country_modifier = { 
        name = more_generals_cheat
        duration = -1  
    }
    
}

set_random_trade_good = {
    random_list = {
        25 = {
            change_trade_goods = spices
        }
        25 = {
            change_trade_goods = tropical_wood
        }
        25 = {
            change_trade_goods = cocoa
        }
        25 = {
            change_trade_goods = ivory
        }
    }
}

setup_pax_solis_laws = {
    # Taxation System - Progressive Tax System
    remove_country_modifier = hf_estate_int_farmingtax
    remove_country_modifier = hf_estate_int_headtax
    remove_country_modifier = hf_estate_int_landtax
    remove_country_modifier = hf_estate_int_flattax
    remove_country_modifier = hf_estate_int_salestax
    remove_country_modifier = hf_estate_int_graintax

    add_country_modifier = {
        name = hf_estate_int_flattax
        duration = -1
    }

    clr_country_flag = hf_viewing_estate_int_tax_event

    # Economic Basis - Mercantilism
    remove_country_modifier = hf_estate_int_naturaleconomy
    remove_country_modifier = hf_estate_int_physiocracy
    remove_country_modifier = hf_estate_int_mercantilism

    add_country_modifier = {
        name = hf_estate_int_mercantilism
        duration = -1
    }

    clr_country_flag = hf_viewing_estate_int_economy_event

    # Trade Principle - Trade Protection
    remove_country_modifier = hf_estate_int_isolationism
    remove_country_modifier = hf_estate_int_freetrade

    add_country_modifier = {
        name = hf_estate_int_protectionism
        duration = -1
    }

    clr_country_flag = hf_viewing_estate_int_trade_event

    # Church and State - State Religion

    remove_country_modifier = hf_estate_int_sepchurchstate
    remove_country_modifier = hf_estate_int_freeconscience

    add_country_modifier = {
        name = hf_estate_int_statereligion
        duration = -1
    }

    clr_country_flag = hf_viewing_estate_int_religion_event

    # Civil Administration - Citizenship Act
    remove_country_modifier = hf_estate_int_sharecropping
    remove_country_modifier = hf_estate_int_serfdom
    remove_country_modifier = hf_estate_int_craftsman
    remove_country_modifier = hf_estate_int_forcedlabor
    remove_country_modifier = hf_estate_int_cool_down_population

    add_country_modifier = {
        name = hf_estate_int_settlemgn
        duration = -1
    }

    clr_country_flag = hf_viewing_estate_int_population_event
}

adding_all_provinces_to_parliament_and_setting_approval_chance = {
    add_country_modifier = { 
        name = bill_of_rights_parliament
        duration = -1  
    }

    add_country_modifier = { 
        name = gbr_pax_britannica
        duration = -1  
    }

    add_country_modifier = { 
        name = ave_pax_angevina
        duration = -1  
    }

    add_country_modifier = { 
        name = eng_the_two_houses
        duration = -1  
    }

    every_owned_province = {
        set_seat_in_parliament = yes
    }
}

remove_guaranteed_religious_autonomy = {
    # Remove guaranteed religious autonomy modifiers
    every_owned_province = {
        remove_province_modifier = estate_church_lao_animism_mod
        remove_province_modifier = estate_dhimmi_guaranteed_autonomy_mod
    }
}

fixing_religion_and_culture = {
    # If propagate religion on trade node is enabled, allow propagating to every religion type
    set_country_flag = can_propagate_religion_in_abrahamic_provinces

    # Remove guaranteed religious autonomy modifiers
    remove_guaranteed_religious_autonomy = yes
    every_subject_country = {
        remove_guaranteed_religious_autonomy = yes
    }

    every_owned_province = {
        limit = {
            culture = noculture
        }
        change_culture = owner
    }
    every_owned_province = {
        limit = {
            religion = noreligion
        }
        change_religion = owner
    }
}

create_homeguard_general = {
    if = {
        limit = {
            NOT = { 	
                has_leader_with = {
                    shock = 666
                    fire = 666
                    manuever = 666666
                    siege = 666
                }
            }
        }

        define_general = {
            name = "Homeguard General"
            shock = 666
            fire = 666
            manuever = 666666
            siege = 666
            trait = "siege_specialist_personality"
        }
    }
}

confucian_subjects_full_harmonize = {
    every_subject_country = {
        limit = {
            religion = confucianism
        }
        if = {
            limit = {
                NOT = {
                    has_harmonized_with = christian
                }
            }
            add_harmonized_religion = catholic
            add_harmonized_religion = orthodox
            add_harmonized_religion = coptic
            add_harmonized_religion = protestant
            add_harmonized_religion = reformed
        }
        if = {
            limit = {
                NOT = {
                    has_harmonized_with = muslim
                }
            }
            add_harmonized_religion = sunni
        }
        if = {
            limit = {
                NOT = {
                    has_harmonized_with = mahayana
                }
            }
            add_harmonized_religion = mahayana
        }
        if = {
            limit = {
                NOT = {
                    has_harmonized_with = shinto
                }
            }
            add_harmonized_religion = shinto
        }
        if = {
            limit = {
                NOT = {
                    has_harmonized_with = vajrayana
                }
            }
            add_harmonized_religion = vajrayana
        }
        if = {
            limit = {
                NOT = {
                    has_harmonized_with = buddhism
                }
            }
            add_harmonized_religion = buddhism
        }
        if = {
            limit = {
                NOT = {
                    has_harmonized_with = dharmic
                }
            }
            add_harmonized_religion = hinduism
        }
        if = {
            limit = {
                NOT = {
                    has_harmonized_with = pagan
                }
            }
            add_harmonized_religion = animism
        }
        if = {
            limit = {
                NOT = {
                    has_harmonized_with = jewish_group
                }
            }
            add_harmonized_religion = jewish
        }
        if = {
            limit = {
                NOT = {
                    has_harmonized_with = zoroastrian_group
                }
            }
            add_harmonized_religion = zoroastrian
        }
    }
}

updating_subject_loyalties = {
    every_subject_country = {
        limit = {
            AND = {
                NOT = {    
                    or = {
                        is_subject_of_type = muslim_tributary_vassal
                        is_subject_of_type = self_governing_colony
                        tag = ETH
                        religion = jewish
                    }
                }
            }
        }
        change_religion = overlord
    }

    # Royal Marriage with all subjects
    every_subject_country = {
        limit = {
            NOT = {
                OR = {
                    is_subject_of_type = concentration_camp
                    is_subject_of_type = revolution_subject
                }
            }
        }
        overlord = {
            if = {
                limit = {
                    not = {
                        marriage_with = PREV
                    }
                }
                create_marriage = PREV
                add_legitimacy = 5
            }
        }

        add_legitimacy = 100
        add_devotion = 100
        add_horde_unity = 100
        set_meritocracy = 100
        add_republican_tradition = 100
        add_trust = {
            who = overlord
            value = 100
            mutual = yes
        }
        # add_treasury = 100000

        set_dynasty = overlord
        add_prestige = 100
        add_stability = 3
        add_corruption = -100
        add_war_exhaustion = -100

        every_owned_province = {
            add_devastation = -100
        }
        
        add_estate_loyalty = {
            estate = estate_church
            loyalty = 100
        }
        add_estate_loyalty = {
            estate = estate_nobles
            loyalty = 100
        }
        add_estate_loyalty = {
            estate = estate_burghers
            loyalty = 100
        }
        add_estate_loyalty = {
            estate = estate_dhimmi
            loyalty = 100
        }
        add_estate_loyalty = {
            estate = estate_jains
            loyalty = 100
        }
    }

    # Making confucian subjects harmonize with all religions
    confucian_subjects_full_harmonize = yes
}


auto_hire_adm_natural_scientist_advisor = {
    if = {
        limit = {
            current_income_balance = 400
            # is_year = 1500 
        }
        add_treasury = -400
        hire_advisor = {
            type = natural_scientist
            skill = 5
        }
    } 
}

auto_hire_mil_commandant_advisor_if_needed = {
    if = {
        limit = {
            NOT = {
                employed_advisor = {
                    category = MIL
                    type = commandant
                }
            }
        }
        auto_hire_mil_commandant_advisor = yes
    }
}

auto_hire_mil_commandant_advisor = {
    if = {
        limit = {
            current_income_balance = 200
        }
        add_treasury = -400
        hire_advisor = {
            type = commandant
            skill = 5
        }
    } else_if = {
        limit = {
            current_income_balance = 100
        }
        add_treasury = -200
        hire_advisor = {
            type = commandant
            skill = 3
        }
    } else = {
        add_treasury = -10
        hire_advisor = {
            type = commandant
            skill = 1
        }
    }
}