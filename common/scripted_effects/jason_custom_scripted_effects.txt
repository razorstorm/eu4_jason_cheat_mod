change_all_provinces_to_gold = {
    every_owned_province = {
        limit = {
            NOT = { trade_goods = gold }
            NOT = { trade_goods = silver }
        }
        change_trade_goods = gold
    }
}

set_high_dev_cost_reduction_on_prov = {
    add_province_modifier = {
        name = jason_dev_cost_reduction_350_1
        duration = -1
    }
    add_province_modifier = {
        name = jason_dev_cost_reduction_100_1
        duration = -1
    }
    add_province_modifier = {
        name = jason_dev_cost_reduction_100_2
        duration = -1
    }    
}

set_high_dev_cost_reduction_on_all_gold_and_silver_prov = {
    every_owned_province = {
        limit = {
            OR = {
                trade_goods = gold
                trade_goods = silver
            }
        }
        set_high_dev_cost_reduction_on_prov = yes
    }
}

set_high_dev_resource_gathering_operation = {
    if = {
        limit = {
            NOT = {
                # Ignore provinces that are already highly devved 
                base_production = 25
            }
        }
        set_base_tax = 20
        set_base_production = 25
        set_base_manpower = 15
    }
        
    set_local_autonomy = 0
}

set_high_dev_on_all_gold_prov = {
    every_owned_province = {
        limit = {
            OR = {
                trade_goods = gold
                trade_goods = silver
            }
            NOT = {
                # Ignore provinces that are already highly devved 
                base_production = 25
            }
        }
        set_high_dev_resource_gathering_operation = yes
    }
}

set_high_defensiveness_on_prov = {
    add_province_modifier = {
        name = jason_mod_more_garrison
        duration = -1
    }
    add_province_modifier = {
        name = jason_mod_more_garrison_huge
        duration = -1
    }
    add_province_modifier = {
        name = jason_mod_more_garrison_growth
        duration = -1
    }
    add_province_modifier = {
        name = jason_mod_more_fort
        duration = -1
    }
    # log = "Added Defensiveness on Province [This.GetName]" # This stackoverflows for some reason
}

remove_high_defensiveness_on_prov = {
    remove_province_modifier = jason_mod_more_garrison
    remove_province_modifier = jason_mod_more_garrison_huge
    remove_province_modifier = jason_mod_more_garrison_growth
    remove_province_modifier = jason_mod_more_fort
}

set_high_defensiveness_on_country = {
    add_country_modifier = {
        name = jason_mod_more_garrison
        duration = -1
    }
    add_country_modifier = {
        name = jason_mod_more_garrison_huge
        duration = -1
    }
    add_country_modifier = {
        name = jason_mod_more_garrison_growth
        duration = -1
    }
    add_country_modifier = {
        name = jason_mod_more_fort
        duration = -1
    }
}

remove_high_defensiveness_on_country = {
    remove_country_modifier = jason_mod_more_garrison
    remove_country_modifier = jason_mod_more_garrison_huge
    remove_country_modifier = jason_mod_more_garrison_growth
    remove_country_modifier = jason_mod_more_fort
}

fix_zero_dev = {
    every_province = {
        if = {
            limit = {
                NOT = {
                    base_manpower = 1
                }
            }
            add_base_manpower = 1
        }
        if = {
            limit = {
                NOT = {
                    base_tax = 1
                }
            }
            add_base_tax = 1
        }
        if = {
            limit = {
                NOT = {
                    base_production = 1
                }
            }
            add_base_production = 1
        }
    }
}

extend_golden_age_by_one_year = {
    extend_golden_age = 12 # 1 more year
}

reduce_gold_depletion_chance_on_country_and_subjects = {
    add_country_modifier = { 
        name = gold_depletion_cheat
        duration = -1  
    }
    every_subject_country = {
        add_country_modifier = { 
            name = gold_depletion_cheat
            duration = -1  
        }
    }
}

set_build_time_reduction_on_country_and_subjects = {
    add_country_modifier = { 
        name = jason_mod_lessTime
        duration = -1  
    }

    add_country_modifier = {
        name = jason_global_more_building_slots
        duration = -1
    }

    every_subject_country = {
        add_country_modifier = { 
            name = jason_mod_lessTime
            duration = -1  
        }

        add_country_modifier = {
            name = jason_global_more_building_slots
            duration = -1
        }
    }
}

set_supply_cheat_on_country_and_subjects = {
    add_country_modifier = {
        name = jason_global_more_building_slots
        duration = -1
    }
    add_country_modifier = {
        name = supply_cheat_modifier
        duration = -1
    }

    every_subject_country = {
        add_country_modifier = {
            name = jason_global_more_building_slots
            duration = -1
        }
        add_country_modifier = {
            name = supply_cheat_modifier
            duration = -1
        }
    }
}

prov_trade_power = {
    add_province_modifier = {
        name = province_trade_power_modifier_cheat
        duration = -1
    }
    center_of_trade = 3
    add_center_of_trade_level = 3
}

set_prov_trade_power_on_all_cot = {
    every_owned_province = {
        limit = {
            province_has_center_of_trade_of_level = 1
        }
        add_province_modifier = {
            name = province_trade_power_modifier_cheat
            duration = -1
        }
        set_local_autonomy = 0
        if = {
            limit = {
                NOT = {
                    base_production = 15
                }
            }
            set_base_production = 15
        }
    }
}

set_prov_trade_power_on_all = {
    every_owned_province = {
        add_province_modifier = {
            name = province_trade_power_modifier_cheat
            duration = -1
        }
        set_local_autonomy = 0
        if = {
            limit = {
                NOT = {
                    base_production = 30
                }
            }
            set_base_production = 30
        }
    }
}

set_prov_trade_power_on_all_cot_for_country_and_subjects = {
    set_prov_trade_power_on_all_cot = yes
    every_subject_country = {
        set_prov_trade_power_on_all_cot = yes
    }
}

set_prov_trade_power_on_all_for_country_and_subjects = {
    set_prov_trade_power_on_all = yes
    every_subject_country = {
        set_prov_trade_power_on_all = yes
    }
}

marry_all_christians = {
    every_country = {
        limit = {
            OR = {
                religion = catholic
                religion = orthodox
                religion = coptic
                religion = protestant
                religion = reformed
    
                religion_group = christian
            }
            NOT = { marriage_with = ROOT }
        }
        ROOT = {
            create_marriage = PREV
            add_legitimacy = 2
        }
    }    
}

marry_everyone = {
    every_country = {
        limit = {
            NOT = { marriage_with = ROOT }
        }
        ROOT = {
            create_marriage = PREV
            add_legitimacy = 2
        }
    } 
}

upgrade_all_cot_to_level_2 = {
    every_owned_province = {
        limit = {
            province_has_center_of_trade_of_level = 1
            NOT = {
                province_has_center_of_trade_of_level = 2
            }
            owner = {
                treasury = 200
            }
        }
        add_center_of_trade_level = 1
        owner = {
            add_treasury = -200
        }
    }

    every_subject_country = {
        every_owned_province = {
            limit = {
                province_has_center_of_trade_of_level = 1
                NOT = {
                    province_has_center_of_trade_of_level = 2
                }
                owner = {
                    overlord = {
                        treasury = 200
                    }
                }
            }
            add_center_of_trade_level = 1
            owner = {
                overlord = {
                    add_treasury = -200
                }
            }
        }
    }
}

upgrade_all_cot_to_level_3 = {
    every_owned_province = {
        limit = {
            province_has_center_of_trade_of_level = 1
            NOT = {
                province_has_center_of_trade_of_level = 3
            }
            owner = {
                treasury = 1000
            }
        }
        add_center_of_trade_level = 1
        owner = {
            add_treasury = -1000
        }
    }

    every_subject_country = {
        every_owned_province = {
            limit = {
                province_has_center_of_trade_of_level = 1
                NOT = {
                    province_has_center_of_trade_of_level = 3
                }
                owner = {
                    overlord = {
                        treasury = 1000
                    }
                }
            }
            add_center_of_trade_level = 1
            owner = {
                overlord = {
                    treasury = -1000
                }
            }
        }
    }
}

set_owned_specific_provinces_to_gold = {
    every_province = {
        limit = {
            country_or_subject_holds = ROOT
            is_specific_gold_staked_province = yes
            NOT = { trade_goods = gold }
        }
        change_trade_goods = gold
    }
}

set_gold_to_slaves = {
    every_owned_province = {
        limit = {
            trade_goods = gold
        }
        change_trade_goods = slaves
    }
}

set_owned_slave_provinces_to_gold = {
    every_province = {
        limit = {
            country_or_subject_holds = ROOT
            trade_goods = slaves
        }
        change_trade_goods = gold
    }
}

upgrade_ruler = {
    change_adm = 6
    change_dip = 6
    change_mil = 6

    add_ruler_personality = ruler_of_destiny_personality
    add_ruler_personality = immortal_personality
    add_ruler_personality = legendary_conqueror_personality
    add_ruler_personality = scholar_personality
}

make_immortal_ruling_family = {
    upgrade_ruler = yes

    if = {
        limit = {
            OR = {
                has_ruler = no
                NOT = { adm = 6 }
                NOT = { dip = 6 }
                NOT = { mil = 6 }
            }
        }

        define_ruler = {
            dynasty = ROOT
            culture = ROOT
            religion = ROOT
            adm = 10
            dip = 10
            mil = 10
            male = yes
            fixed = yes
        }
    }

    if = {
        limit = {
            OR = {
                has_consort = no
                NOT = { consort_adm = 6 }
                NOT = { consort_dip = 6 }
                NOT = { consort_mil = 6 }
            }
        }

        define_consort = {
            culture = ROOT
            adm = 6
            dip = 6
            mil = 6
            female = yes
        }

        add_queen_personality = immortal_personality
    }

    if = {
        limit = {
            OR = {
                has_heir = no
                NOT = { heir_adm = 6 }
                NOT = { heir_dip = 6 }
                NOT = { heir_mil = 6 }
            }
        }

        define_heir = {
            culture = ROOT
            dynasty = ROOT
            claim = 100
            adm = 6
            dip = 6
            mil = 6
            female = no
        }

        add_heir_personality = immortal_personality
    }
    
    if = {
        limit = {
            NOT = {
                has_country_flag = fee_events_for_student_of_language_active 
            }
            NOT = {
                has_ruler_modifier = fee_advisor_multilingual_ruler
            }
        }
        add_ruler_modifier = {
            name = fee_ruler_trait_diligent
            duration = -1
        }
        add_ruler_modifier = {
            name = fee_ruler_trait_patient
            duration = -1
        }
        add_ruler_modifier = {
			name = fee_advisor_student_language
			duration = -1
		}
        add_ruler_modifier = {
			name = fee_advisor_multilingual_ruler
			duration = -1
		}
        set_country_flag = fee_events_for_student_of_language_active
    }
    if = {
        limit = {
            has_consort = yes
            NOT = { has_ruler_modifier = consort_of_the_people } 
        }
		add_ruler_modifier = { 
			name = consort_of_the_people
		}
    }
}

set_initialize_cheats = {
    add_country_modifier = { 
        name = mod_more_dip_upkeep
        duration = -1  
    }
    add_country_modifier = { 
        name = jason_mod_lessTime
        duration = -1  
    }
    add_country_modifier = {
        name = jason_global_more_building_slots
        duration = -1
    }
    add_country_modifier = { 
        name = jason_mod_faster_envoy
        duration = -1  
    }
    
    add_country_modifier = {
        name = jason_mod_less_attrition
        duration = -1  
    }
    
    add_country_modifier = {
        name = jason_mod_more_tradition
        duration = -1  
    }
    
    add_country_modifier = {
        name = jason_mod_more_dip_upkeep
        duration = -1  
    }
    
    add_country_modifier = {
        name = jason_mod_extremely_more_dip_upkeep
        duration = -1
    }
    
    add_country_modifier = { 
        name = more_diplomats
        duration = -1  
    }
    
    add_country_modifier = { 
        name = jason_mod_more_dips
        duration = -1  
    }
    
    add_country_modifier = {
        name = client_states_cheat
        duration = -1
    }
    
    # 2 flagships
    add_country_modifier = {
        name = ned_one_world
        duration = -1
    }
    
    ##########################################################################
    # Supply
    ##########################################################################
    
    add_country_modifier = {
        name = supply_cheat_modifier
        duration = -1
    }
    
    ##########################################################################
    # Range
    ##########################################################################
    
    add_country_modifier = {
        name = jason_mod_more_trade_range
        duration = -1
    }
    
    ##########################################################################
    # Policy Slots
    ##########################################################################
    
    add_country_modifier = {
        name = jason_more_policy_slots
        duration = -1
    }
    
    ##########################################################################
    # Envoy Travel Speed
    ##########################################################################
     
    add_country_modifier = {
        name = envoy_travel_time_cheats
        duration = -1
    }
    add_country_modifier = { 
        name = emissary_authority
        duration = -1
    }
    
    
    ##########################################################################
    # Ruler
    ##########################################################################
    
    if = {
        limit = {
            is_a_persian_tag = yes
        }
        define_ruler = {
            culture = ROOT
            religion = ROOT
            adm = 10
            dip = 10
            mil = 10
            male = yes
            name = "Ismail I"
            fixed = yes
        }
    }
    else_if = {
        limit = {
            OR = {
                tag = ENG
                tag = GBR
            }
        }
        define_ruler = {
            dynasty = "Lancaster"
            culture = ROOT
            religion = ROOT
            adm = 10
            dip = 10
            mil = 10
            male = yes
            name = "Henry V"
            fixed = yes
        }
    }
    else_if = {
        limit = {
            tag = MJZ
        }
        define_ruler = {
            dynasty = ROOT
            culture = ROOT
            religion = ROOT
            adm = 10
            dip = 10
            mil = 10
            male = yes
            name = "Kangxi"
            fixed = yes
        }
    }
    else_if = {
        limit = {
            OR = {
                tag = BYZ
                tag = NHS
            }
        }
        define_ruler = {
            dynasty = "Palaiologos"
            culture = ROOT
            religion = ROOT
            adm = 10
            dip = 10
            mil = 10
            male = yes
            name = "Constantine XII \"The Great\""
            fixed = yes
        }
    }
    else_if = {
        limit = {
            OR = {
                tag = ETH
            }
        }
        define_ruler = {
            dynasty = ROOT
            culture = ROOT
            religion = ROOT
            adm = 10
            dip = 10
            mil = 10
            male = yes
            name = "Menelik II \"The Divine\""
            fixed = yes
        }
    }
    else_if = {
        limit = {
            tag = AZT
        }
        # Don't create new ruler, but make sure to set the montezuma flag if it somehow got unset.
        set_ruler_flag = azt_montezuma    
    }
    else = {
        define_ruler = {
            dynasty = ROOT
            culture = ROOT
            religion = ROOT
            adm = 10
            dip = 10
            mil = 10
            male = yes
            fixed = yes
        }
    }

    upgrade_ruler = yes
    
    
    # Adding advisor pool
    add_country_modifier = { 
        name = ger_chancellorship
        duration = -1  
    }
    add_country_modifier = { 
        name = tur_reign_of_women_modifier
        duration = -1  
    }
    
    
    ##########################################################################
    # Army Professionalism | (1% yearly)
    ##########################################################################
    
    add_country_modifier = { 
        name = mng_yu_qian_manual_modifier
        duration = -1  
    }
    
    ##########################################################################
    # Culture Convert | culture_convert.txt
    ##########################################################################
    
    add_country_modifier = {
        name = culture_conversion_cost_cheat
        duration = -1
    }
    
    add_country_modifier = {
        name = jason_mod_more_culture_speed
        duration = -1
    }
    
    
    ##########################################################################
    # Absolutism | abs.txt
    ##########################################################################
    
    add_country_modifier = {
        name = absolutism_cheat
        duration = -1
    }
    add_country_modifier = {
        name = jason_mod_more_absolutism_max
        duration = -1  
    }
    
    
    ##########################################################################
    # Ship Build times
    ##########################################################################
    
    every_owned_province = {
        limit = {
            has_port = yes
        }
        add_country_modifier = {
            name = global_ship_recruit_speed_cheat
            duration = -1
        }
        # add_province_modifier = {
        #     name = global_ship_recruit_speed_cheat
        #     duration = -1
        # }
        add_province_modifier = {
            name = local_ship_recruit_speed_cheat
            duration = -1
        }
    }
    
    
    ##########################################################################
    # Capital Metropolis
    ##########################################################################
    
    capital_scope = {
        set_base_tax = 20
        set_base_production = 25
        set_base_manpower = 15
    }
    
    
    ##########################################################################
    # Tributary Power          
    ##########################################################################
    add_country_modifier = {
        name = mng_reformed_tributary_obligation_system_modifier
        duration = -1
    }
    
    
    ##########################################################################
    # Infinite generals | leaders.txt    
    ##########################################################################
    add_country_modifier = { 
        name = more_generals_cheat
        duration = -1  
    }
    
}

set_random_trade_good = {
    random_list = {
        25 = {
            change_trade_goods = spices
        }
        25 = {
            change_trade_goods = tropical_wood
        }
        25 = {
            change_trade_goods = cocoa
        }
        25 = {
            change_trade_goods = ivory
        }
    }
}


setup_pax_solis_laws = {
    # Taxation System - Progressive Tax System
    remove_country_modifier = hf_estate_int_farmingtax
    remove_country_modifier = hf_estate_int_headtax
    remove_country_modifier = hf_estate_int_landtax
    remove_country_modifier = hf_estate_int_flattax
    remove_country_modifier = hf_estate_int_salestax
    remove_country_modifier = hf_estate_int_graintax

    add_country_modifier = {
        name = hf_estate_int_flattax
        duration = -1
    }

    clr_country_flag = hf_viewing_estate_int_tax_event

    # Economic Basis - Mercantilism
    remove_country_modifier = hf_estate_int_naturaleconomy
    remove_country_modifier = hf_estate_int_physiocracy
    remove_country_modifier = hf_estate_int_mercantilism

    add_country_modifier = {
        name = hf_estate_int_mercantilism
        duration = -1
    }

    clr_country_flag = hf_viewing_estate_int_economy_event

    # Trade Principle - Trade Protection
    remove_country_modifier = hf_estate_int_isolationism
    remove_country_modifier = hf_estate_int_freetrade

    add_country_modifier = {
        name = hf_estate_int_protectionism
        duration = -1
    }

    clr_country_flag = hf_viewing_estate_int_trade_event

    # Church and State - State Religion

    remove_country_modifier = hf_estate_int_sepchurchstate
    remove_country_modifier = hf_estate_int_freeconscience

    add_country_modifier = {
        name = hf_estate_int_statereligion
        duration = -1
    }

    clr_country_flag = hf_viewing_estate_int_religion_event

    # Civil Administration - Citizenship Act
    remove_country_modifier = hf_estate_int_sharecropping
    remove_country_modifier = hf_estate_int_serfdom
    remove_country_modifier = hf_estate_int_craftsman
    remove_country_modifier = hf_estate_int_forcedlabor
    remove_country_modifier = hf_estate_int_cool_down_population

    add_country_modifier = {
        name = hf_estate_int_settlemgn
        duration = -1
    }

    clr_country_flag = hf_viewing_estate_int_population_event
}