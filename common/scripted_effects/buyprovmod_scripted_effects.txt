pay_for_prov = {
	if = {
		limit = {
			NOT = { development = 11 }
		}
		ROOT = {
			add_treasury = -500
		}
		hidden_effect = {
			$who$ = { set_variable = { which = payment_for_province value = 500 } }
		}
	}
	if = {
		limit = {
			development = 11
			NOT = { development = 21 }
		}
		ROOT = {
			add_treasury = -1000
		}
		hidden_effect = {
			$who$ = { set_variable = { which = payment_for_province value = 1000 } }
		}
	}
	if = {
		limit = {
			development = 21
			NOT = { development = 31 }
		}
		ROOT = {
			add_treasury = -2000
		}
		hidden_effect = {
			$who$ = { set_variable = { which = payment_for_province value = 2000 } }
		}
	}
	if = {
		limit = {
			development = 31
			NOT = { development = 41 }
		}
		ROOT = {
			add_treasury = -2500
		}
		hidden_effect = {
			$who$ = { set_variable = { which = payment_for_province value = 2500 } }
		}
	}
	if = {
		limit = {
			development = 41
			NOT = { development = 51 }
		}
		ROOT = {
			add_treasury = -3000
		}
		hidden_effect = {
			$who$ = { set_variable = { which = payment_for_province value = 3000 } }
		}
	}
	if = {
		limit = {
			development = 51
			NOT = { development = 61 }
		}
		ROOT = {
			add_treasury = -3500
		}
		hidden_effect = {
			$who$ = { set_variable = { which = payment_for_province value = 3500 } }
		}
	}
	if = {
		limit = {
			development = 61
			NOT = { development = 71 }
		}
		ROOT = {
			add_treasury = -4000
		}
		hidden_effect = {
			$who$ = { set_variable = { which = payment_for_province value = 4000 } }
		}
	}
	if = {
		limit = {
			development = 71
			NOT = { development = 81 }
		}
		ROOT = {
			add_treasury = -4500
		}
		hidden_effect = {
			$who$ = { set_variable = { which = payment_for_province value = 4500 } }
		}
	}
	if = {
		limit = {
			development = 81
			NOT = { development = 91 }
		}
		ROOT = {
			add_treasury = -5000
		}
		hidden_effect = {
			$who$ = { set_variable = { which = payment_for_province value = 5000 } }
		}
	}
	if = {
		limit = {
			development = 91
			NOT = { development = 101 }
		}
		ROOT = {
			add_treasury = -5500
		}
		hidden_effect = {
			$who$ = { set_variable = { which = payment_for_province value = 5500 } }
		}
	}
	if = {
		limit = {
			development = 101
		}
		ROOT = {
			add_treasury = -6000
		}
		hidden_effect = {
			$who$ = { set_variable = { which = payment_for_province value = 6000 } }
		}
	}
	
	if = {
		limit = {
			$who$ = {
				NOT = { is_subject_of = ROOT }
			}
			owner = {
				NOT = { is_subject_of = ROOT }
				is_colonial_nation = no
			}
		}
		if = {
			limit = {
				OR = {
					is_capital = yes
					has_province_flag = was_capital_before_it_was_bought
				}
			}
			custom_tooltip = " "
			custom_tooltip = EXTRA_X_DUCATS_BECAUSE_PROV_IS_CAPITAL
			hidden_effect = {
				if = {
					limit = {
						has_province_flag = was_capital_before_it_was_bought
					}
					clr_province_flag = was_capital_before_it_was_bought
				}
				ROOT = { add_treasury = -300 }
				$who$ = { change_variable = { which = payment_for_province value = 300 } }
			}
		}
		if = {
			limit = {
				province_is_objective_of_current_age = yes
			}
			custom_tooltip = " "
			custom_tooltip = EXTRA_X_DUCATS_BECAUSE_PROV_IS_OBJECTIVE_OF_AGE
			hidden_effect = {
				ROOT = { add_treasury = -1000 }
				$who$ = { change_variable = { which = payment_for_province value = 1000 } }
			}
		}
		if = {
			limit = {
				NOT = {
					any_trade_node_member_province = {
						NOT = { province_id = PREV }
						NOT = { owned_by = ROOT }
						NOT = { owner = { is_subject_of = ROOT } }
						variable_arithmetic_trigger = {
							custom_tooltip = CHECK_BASE_TRADE_POWER
							export_to_variable = {
								which = province_base_trade_power_variable
								value = modifier:province_trade_power_value
							}
							export_to_variable = {
								which = PREV_province_base_trade_power_variable
								value = modifier:province_trade_power_value
								who = PREV
							}
							check_variable = { which = province_base_trade_power_variable which = PREV_province_base_trade_power_variable }
						}
					}
				}
			}
			custom_tooltip = " "
			custom_tooltip = EXTRA_X_DUCATS_BECAUSE_PROV_HAS_HIGH_TRADE_POWER
			hidden_effect = {
				$who$ = {
					set_variable = { which = province_trade_power_variable which = PREV }
					change_variable = { which = payment_for_province which = province_trade_power_variable }
				}
				ROOT = {
					set_variable = { which = province_trade_power_variable which = PREV }
					while = {
						limit = {
							check_variable = { which = province_trade_power_variable value = 10000 }
						}
						add_treasury = -10000
						change_variable = { which = province_trade_power_variable value = -10000 }
					}
					while = {
						limit = {
							check_variable = { which = province_trade_power_variable value = 1000 }
						}
						add_treasury = -1000
						change_variable = { which = province_trade_power_variable value = -1000 }
					}
					while = {
						limit = {
							check_variable = { which = province_trade_power_variable value = 100 }
						}
						add_treasury = -100
						change_variable = { which = province_trade_power_variable value = -100 }
					}
					while = {
						limit = {
							check_variable = { which = province_trade_power_variable value = 10 }
						}
						add_treasury = -10
						change_variable = { which = province_trade_power_variable value = -10 }
					}
					while = {
						limit = {
							check_variable = { which = province_trade_power_variable value = 1 }
						}
						add_treasury = -1
						change_variable = { which = province_trade_power_variable value = -1 }
					}
				}
			}
		}
	}
	custom_tooltip = " "
}

# run_pax_solis_prov = {
#     ROOT = {
#         remove_country_modifier = hf_estate_int_cool_down_trade
#         remove_country_modifier = hf_estate_int_cool_down_economy
#         remove_country_modifier = hf_estate_int_cool_down_tax
#         remove_country_modifier = hf_estate_int_cool_down_religion
#         remove_country_modifier = hf_estate_int_cool_down_population
#         # Intelligentsia
#         add_estate_loyalty = {
#             estate = estate_intelligentsia
#             loyalty = 100
#         }    
#         add_estate_loyalty = {
#             estate = estate_military_residence
#             loyalty = 100
#         }    
        
#         CAPITAL_SCOPE = {
#             if = {
#                 limit = {
#                     NOT = {
#                         has_building = university
#                     }
#                 }
#                 add_building = university
#             }
#         }
    
#         if = {
#             limit = {
#                 is_year = 1500
#             }
#             # log = "Adding University to all provinces"
#             every_owned_province = {
#                 limit = { 
#                     NOT = {
#                         has_building = university
#                     }
#                 }
#                 add_building = university
#             }
#         }
        
#         every_subject_country = {
#             every_owned_province = {
#                 limit = { 
#                     NOT = {
#                         has_building = university
#                     }
#                 }
#                 add_building = university
#             }
#         }
    
#         # Fixing stupid pax solis bug that causes chinese events to fire on non chinese tags
#         every_owned_province = {
#             add_country_modifier = {
#                 name = hf_jianbing_modifier
#                 duration = -1
#             }
#         }
    
#         add_country_modifier = {
#             name = hf_city_massacre
#             duration = -1
#         }
    
    
#         # Pax Solis Auto Set Town Sizes
#         every_owned_province = {
#             limit = { 
#                 NOT = { development = 4 } 
#             }
            
#             clr_province_flag = hf_prov_settlement
#             clr_province_flag = hf_prov_village
#             clr_province_flag = hf_prov_town
#             clr_province_flag = hf_prov_city
    
#             set_province_flag = hf_prov_settlement
#         }
#         every_owned_province = {
#             limit = { 
#                 development = 4
#                 NOT = { development = 6 } 
#             }
            
#             clr_province_flag = hf_prov_settlement
#             clr_province_flag = hf_prov_village
#             clr_province_flag = hf_prov_town
#             clr_province_flag = hf_prov_city
    
#             set_province_flag = hf_prov_village
#         }
#         every_owned_province = {
#             limit = { 
#                 development = 6
#                 NOT = { development = 8 } 
#             }
            
#             clr_province_flag = hf_prov_settlement
#             clr_province_flag = hf_prov_village
#             clr_province_flag = hf_prov_town
#             clr_province_flag = hf_prov_city
    
#             set_province_flag = hf_prov_town
#         }
#         every_owned_province = {
#             limit = { 
#                 development = 8
#             }
            
#             clr_province_flag = hf_prov_settlement
#             clr_province_flag = hf_prov_village
#             clr_province_flag = hf_prov_town
#             clr_province_flag = hf_prov_city
    
#             set_province_flag = hf_prov_city
#         }
    
    
    
#         # Pax Solis Inflation
#         add_country_modifier = { 
#             name = strong_treasury
#             duration = -1  
#         }
#         add_country_modifier = { 
#             name = hol_strict_control
#             duration = -1  
#         }
#         add_country_modifier = { 
#             name = master_of_mint_boost
#             duration = -1  
#         }
    
    
#         # buildings
#         every_owned_province = {
#             if = {
#                 limit = {
#                     NOT = {
#                         has_building = roads
#                     }
#                 }
#                 add_building = roads
#             }
#             if = {
#                 limit = {
#                     NOT = {
#                         has_building = stage_station
#                     }
#                 }
#                 add_building = stage_station
#             }
#         }
    
#         every_subject_country = {
#             every_owned_province = {
#                 if = {
#                     limit = {
#                         NOT = {
#                             has_building = roads
#                         }
#                     }
#                     add_building = roads
#                 }
#                 if = {
#                     limit = {
#                         NOT = {
#                             has_building = stage_station
#                         }
#                     }
#                     add_building = stage_station
#                 }
#             }
#         }
    
    
#         # governor
#         every_owned_province = {
#             limit = {
#                 is_state = yes
#                 OR = {
#                     NOT = {
#                         has_province_flag = hf_gov_estate_burghers
#                     }
#                     NOT = {
#                         has_province_flag = hf_gov_estate_ruler
#                     }
#                 }
#             }
    
#             hf_remove_all_prov_ruler = yes
#             set_province_flag = hf_gov_estate_burghers
#             set_province_flag = hf_gov_estate_ruler
#             add_province_modifier = {
#                 name = hf_gov_estate_burghers_modifier
#                 duration = -1
#             }
#         }
#     }
# }

# run_anbennar_prov = {
#     ROOT = {
#         # Liberate Command Vassals
#         # R62 = {
#         #     every_subject_country = {
#         #         grant_independence = yes
#         #     }
#         # }
    
#         # Loreseeker 
#         if = {
#             limit = {
#                 ruler_studying_magic = yes
#                 magic_legend_lore_cost_trigger = yes
#                 NOT = { has_ruler_modifier = magic_loreseeker_cooldown }
#             }
#             magic_casted_spell = yes
#             magic_legend_lore_effect = yes
#             set_country_flag = divination_menu
#             hidden_effect = { country_event = { id = magic_ruler.9 } }
#             log = "Loreseeker available, casting now"
#         }
    
#         # Magic
#         ROOT = {
#             add_country_modifier = {
#                 name = magic_estate_magnificent_feast_3
#                 duration = -1
#             }
    
#             add_country_modifier = {
#                 name = magic_realm_transmutation_plant_growth_4
#                 duration = -1
#             }
        
#             # War Magic III
#             add_ruler_modifier = {
#                 name = magic_realm_evocation_war_magic_3
#                 duration = -1
#             }
    
#             # Charm III - Diplomats
#             add_ruler_modifier = {
#                 name = magic_realm_enchantment_charm_impress_foreign_diplomats_3
#                 duration = -1
#             }
    
#             # Charm III - Military
#             add_ruler_modifier = {
#                 name = magic_realm_enchantment_charm_inspire_military_3
#                 duration = -1
#             }
    
#             # Charm III - Subjects
#             add_ruler_modifier = {
#                 name = magic_realm_enchantment_charm_assuage_subjects_3
#                 duration = -1
#             }
    
#             # Foresight 
#             add_country_modifier = {
#                 name = magic_realm_divination_foresight
#                 duration = -1
#             }
    
#             # Magnificent Feast
#             add_country_modifier = {
#                 name = magic_estate_magnificent_feast_3
#                 duration = -1
#             }
#         }
    
#         # colonists
#         every_subject_country = {
#             add_treasury = 100000
#             change_government = monarchy
        
#             add_country_modifier = {
#                 name = free_income_cheat
#                 duration = -1
#             }
#             add_country_modifier = {
#                 name = hierarchy_lots_of_colonists
#                 duration = -1
#             }
#             add_country_modifier = {
#                 name = jaddari_jadd_expedition_into_the_dark
#                 duration = -1
#             }
#             remove_country_modifier = dont_colonize_but_migrate
#             change_government = monarchy
#         }
    
#         # Genocide
#         every_owned_province = {
#             # change_culture = ROOT
            
#             remove_province_modifier = orcish_minority_oppressed_small
#             remove_province_modifier = orcish_minority_oppressed_large
    
#             remove_province_modifier = orcish_minority_oppressed_small
#             remove_province_modifier = orcish_minority_oppressed_large
    
#             remove_province_modifier = hobgoblin_minority_oppressed_small
#             remove_province_modifier = hobgoblin_minority_oppressed_large
    
#             remove_province_modifier = goblin_minority_oppressed_small
#             remove_province_modifier = goblin_minority_oppressed_large
    
#             remove_province_modifier = troll_minority_oppressed_small
#             remove_province_modifier = troll_minority_oppressed_large
    
#             remove_province_modifier = harpy_minority_oppressed_small
#             remove_province_modifier = harpy_minority_oppressed_large
    
#             remove_province_modifier = ogre_minority_oppressed_small
#             remove_province_modifier = ogre_minority_oppressed_large
    
#             remove_province_modifier = orcish_minority_oppressed_small
#             remove_province_modifier = orcish_minority_oppressed_large
    
    
#             remove_province_modifier = orcish_majority_oppressed_small
#             remove_province_modifier = orcish_majority_oppressed_large
    
#             remove_province_modifier = elven_minority_oppressed_small
#             remove_province_modifier = elven_minority_oppressed_large
#         }
    
#         # Dwarven Road Speed
#         every_owned_province = {
#             limit = {
#                 has_terrain = dwarven_road
#             }
#             remove_province_modifier = dwarovar_rail
#             add_permanent_province_modifier = { 
#                 name = rocket_rail
#                 duration = -1
#             }
#             add_permanent_province_modifier = { 
#                 name = Z36_surface_rail
#                 duration = -1
#             }
#             add_permanent_province_modifier = { 
#                 name = G35_tromseloc_way
#                 duration = -1
#             }
#             add_permanent_province_modifier = { 
#                 name = Z36_horse_rail
#                 duration = -1
#             }
#             add_permanent_province_modifier = { 
#                 name = ravenmarch_swamp_road
#                 duration = -1
#             }
#             add_permanent_province_modifier = { 
#                 name = G35_tromseloc_way
#                 duration = -1
#             }
#             add_permanent_province_modifier = { 
#                 name = gelkalis_enchanted_bridges
#                 duration = -1
#             }
#             add_permanent_province_modifier = { 
#                 name = A99_well_mantained_bridges
#                 duration = -1
#             }
#             add_permanent_province_modifier = { 
#                 name = deranne_winebay_bastion
#                 duration = -1
#             }
#             add_permanent_province_modifier = { 
#                 name = jaddari_rumours_of_the_jadd_among_the_fey
#                 duration = -1
#             }
#             add_permanent_province_modifier = { 
#                 name = jaddari_the_golden_thread
#                 duration = -1
#             }
#             add_permanent_province_modifier = { 
#                 name = rezankand_sunny_road
#                 duration = -1
#             }
#             add_permanent_province_modifier = { 
#                 name = rezankand_leaf_path
#                 duration = -1
#             }
#             add_permanent_province_modifier = { 
#                 name = barumand_celebrate_emergency_gate_modifier
#                 duration = -1
#             }
#             add_permanent_province_modifier = { 
#                 name = malacnar_ynn
#                 duration = -1
#             }
#             add_permanent_province_modifier = { 
#                 name = obrtrol_gerudian_coast_prosperity
#                 duration = -1
#             }
#             add_permanent_province_modifier = { 
#                 name = eord_jade_tunnel
#                 duration = -1
#             }
#         }
    
#         # Explored
#         every_owned_province = {
#             set_province_flag = floor_explored
#         }
    
#         # hold setup 
#         every_owned_province = {
#             limit = {
#                 OR = {
#                     has_terrain = dwarven_hold
#                     has_terrain = dwarven_hold_surface
#                 }
#                 # NOT = {
#                 #     has_building = fort_15th
#                 # }
#                 NOT = {
#                     has_province_flag = hold_handled
#                 }
#                 ROOT = {
#                     treasury = 200
#                 }
#             }
    
#             set_province_flag = hold_handled
    
#             add_province_modifier = {
#                 name = province_trade_power_modifier_cheat
#                 duration = -1
#             }
#             center_of_trade = 3
#             add_center_of_trade_level = 3
    
#             log = "Setting up hold in: [This.GetName]"
#             add_building = fort_15th
#             add_treasury = -200
#             add_province_modifier = {
#                 name = local_autonomy_cheat
#                 duration = -1
#             }
#             add_province_modifier = {
#                 name = geo_narikala_no_leviathan
#                 duration = -1
#             }
#             add_province_modifier = {
#                 name = feo_defending_trebizond
#                 duration = -1
#             }
#             add_province_modifier = {
#                 name = hsn_rock_fortress
#                 duration = -1
#             }
#             add_province_modifier = {
#                 name = orm_bam_citadel
#                 duration = -1
#             }
#             add_province_modifier = {
#                 name = orm_fortifying_hormuz_island
#                 duration = -1
#             }
#             add_province_modifier = {
#                 name = estate_nobles_vegvar_system_modifier
#                 duration = -1
#             }
#             change_religion = ROOT
#             change_culture = ROOT
#         }
    
#         # hold cot
#         # every_owned_province = {
#         #     limit = {
#         #         OR = {
#         #             has_terrain = dwarven_hold
#         #             has_terrain = dwarven_hold_surface
#         #         }
#         #     }
#         #     center_of_trade = 3
#         #     add_center_of_trade_level = 3
#         # }
    
#         # repair holds
#         every_owned_province = {
#             remove_province_modifier = ruined_hold
#             remove_province_modifier = damaged_hold
#         }
    
#         # subject colonists
#         every_subject_country = {
#             add_country_modifier = {
#                 name = gawed_gawedi_settlers
#                 duration = -1
#             }
#             add_country_modifier = {
#                 name = nathalaire_resettlement_of_goblins
#                 duration = -1
#             }
#             add_country_modifier = {
#                 name = hierarchy_lots_of_colonists
#                 duration = -1
#             }
#             add_country_modifier = {
#                 name = jaddari_jadd_expedition_into_the_dark
#                 duration = -1
#             }
#             remove_country_modifier = dont_colonize_but_migrate
#             change_government = monarchy
#         }
    
#         # Hold dev
#         ROOT = {
#             set_country_flag = all_holds_deved
    
#             every_subject_country = {
#                 limit = {
#                     is_subject_of_type = amlharaz_hold
#                 }
#                 if = {
#                     limit = {
#                         NOT = {
#                             development = 70
#                         }
#                     }
#                     clr_country_flag = all_holds_deved
#                 }
#             }
    
#             set_variable = {
#                 which = myCountingVariable
#                 value = 0
#             }
            
#             while = {
#                 limit = {
#                     NOT = {
#                         has_country_flag = all_holds_deved
#                     }
#                     NOT = {
#                         check_variable = {
#                             which = myCountingVariable
#                             value = 20
#                         }
#                     }
#                 }
    
#                 log = "Hold Dev Iteration [myCountingVariable.GetValue]"
            
#                 every_owned_province = {
#                     limit = {
#                         OR = {
#                             has_terrain = dwarven_hold
#                             has_terrain = dwarven_hold_surface
#                         }
#                         NOT = {
#                             development = 70
#                         }
#                     }
#                     add_base_tax = 1
#                     add_base_production = 2
#                     add_base_manpower = 1
#                 }
            
#                 change_variable = {
#                     which = myCountingVariable
#                     value = 1
#                 }
#             }
#         }
    
#         change_variable = {
#             which = pointsWitchKing
#             value = -100
#         }
#     }
# }

# run_third_odyssey_prov = {
#     ROOT = {
#         # Para bellum mission modifier that grants fort maintenance cost reduction
#         every_owned_province = {
#             limit = {
#                 OR = {
#                     province_id = 956
#                     province_id = 2553
#                     province_id = 952
#                     province_id = 937
#                     province_id = 953
#                 }
#             }
#             add_building = fort_15th
#             add_province_modifier = {
#                 name = pol_fortified_border_modifier
#                 duration = -1
#             }
#         }
#         # Reset expand bureaucracy cost back to 50. This is for the administrative burden mechanic
#         set_variable = {
#             which = to_ab_expand_bureaucracy_cost
#             value = 50
#         }
#         CAPITAL_SCOPE = {
#             change_trade_goods = elysian_silk
#         }
#         if = {
#             limit = {
#                 # tag = AAA
#             }
#             every_country = {
#                 remove_country_modifier = nhs2_missionaries_cooldown_target
#             }
#             remove_country_modifier = nhs2_missionaries_cooldown
#         }
#         # Europeans stealing carribean colonies
#         every_province = {
#             limit = {
#                 superregion = carribean_superregion
#                 NOT = {
#                     OR = {
#                         owned_by = ROOT
#                         owned_by_subject_of = ROOT
#                     }
#                 }
#                 is_city = yes
#                 is_empty = no
#             }
#             log = "Province [This.GetName] not owned by KYK"
#             cede_province = KYK
#         }
#         K01 = {
#             every_owned_province = {
#                 limit = {
#                     NOT = {
#                         region = central_america_region
#                     }
#                 }
#                 cede_province = ROOT
#             }
#         }
#         KYK = {
#             every_owned_province = {
#                 limit = {
#                     NOT = {
#                         OR = {
#                             superregion = carribean_superregion
#                         }
#                     }
#                 }
#                 log = "Kykladia has wrong province in [This.GetName], granting to Kauda"
#                 cede_province = CM1
#             }
            
#             if = {
#                 limit = {
#                     NOT = {
#                         num_of_colonies = 5
#                     }
#                 }
#                 random_province = {
#                     limit = {
#                         superregion = carribean_superregion
#                         is_empty = yes
#                     }
#                     log = "Creating KYK siberian frontier in: [This.GetName]"
#                     add_siberian_construction = 1
#                     # add_colonysize = -199
#                     cede_province = KYK
                    
#                 }
     
#             }
#         }
    
#         VIN = {
#             if = {
#                 limit = {
#                     NOT = {
#                         num_of_colonies = 10
#                     }
#                 }
#                 random_province = {
#                     limit = {
#                         is_empty = yes
#                         is_neighbor_of = VIN
#                     }
#                     log = "Creating VIN siberian frontier in: [This.GetName]"
#                     add_siberian_construction = 1
#                     # add_colonysize = -199
#                     cede_province = VIN
                    
#                 }
#             }
#         }
    
#         # MSN = {
#         #     if = {
#         #         limit = {
#         #             NOT = {
#         #                 num_of_colonies = 5
#         #             }
#         #         }
#         #         random_province = {
#         #             limit = {
#         #                 is_empty = yes
#         #                 is_neighbor_of = MSN
#         #             }
#         #             log = "Creating MSN siberian frontier in: [This.GetName]"
#         #             add_siberian_construction = 1
#         #             # add_colonysize = -199
#         #             cede_province = MSN
                    
#         #         }
#         #     }
#         # }
    
#         # Subjects colonizing
#         every_subject_country = {
#             if = {
#                 limit = {
#                     NOT = {
#                         treasury = 100000
#                     }
#                 }
#                 add_treasury = 100000
#             }
#             add_country_modifier = {
#                 name = free_income_cheat
#                 duration = -1
#             }
    
#             change_government = monarchy
    
#             # More colonists
#             add_country_modifier = {
#                 name = colonize_the_continent
#                 duration = -1
#             }
#         }
    
#         # Removing Albanian Majority
#         every_owned_province = {
#             remove_province_modifier = nhs2_albanian_majority
#             remove_province_modifier = nhs2_albanian_majority2
#             remove_province_triggered_modifier = nhs2_albanian_majority_tm
#         }
    
#         # Vassalize imperial associates once 100 cities have been reached
#         if = {
#             limit = {
#                 num_of_cities = 100
#             }
#             if = {
#                 limit = {
#                     not = {
#                         MSN = {
#                             is_subject_of_type = nhs_imperial_associate
#                         }
#                     }
#                 }
#                 create_subject = {
#                     subject_type = nhs_imperial_associate
#                     subject = MSN
#                 }
#             }
    
#             if = {
#                 limit = {
#                     not = {
#                         VIN = {
#                             is_subject_of_type = nhs_imperial_associate
#                         }
#                     }
#                 }
#                 create_subject = {
#                     subject_type = nhs_imperial_associate
#                     subject = VIN
#                 }
#             }
#         }
    
#         # Favorable Trade Locations
#         if = {
#             limit = {
#                 num_of_cities = 100
#             }
    
#             every_province = {
#                 limit = {
#                     OR = {
#                         owned_by = ROOT 
#                         owned_by_subject_of = ROOT
#                     }
#                     OR = {
#                         has_province_modifier = to_dynamic_cot
#                         has_active_triggered_province_modifier = to_dynamic_cot
    
#                         province_id = 1005
#                         province_id = 1007
#                         province_id = 2504
#                         province_id = 2507
#                         province_id = 2517
#                         province_id = 2526
#                         province_id = 2532
#                         province_id = 2538
#                         province_id = 2544
#                         province_id = 2546
#                         province_id = 2548
#                         province_id = 2557
#                         province_id = 2569
#                         province_id = 2570
#                         province_id = 2615
#                         province_id = 2633
#                         province_id = 2657
#                         province_id = 2660
#                         province_id = 2670
#                         province_id = 2803
#                         province_id = 2614
#                         province_id = 4587
#                         province_id = 4628
#                         province_id = 5365
#                         province_id = 4903
#                         province_id = 819
#                         province_id = 805
#                         province_id = 2888
#                         province_id = 2919
#                         province_id = 2857
#                         province_id = 2850
#                         province_id = 781
#                         province_id = 782
#                         province_id = 745
#                         province_id = 830
#                         province_id = 831
#                         province_id = 843
#                         province_id = 851
#                         province_id = 864
#                         province_id = 868
#                         province_id = 873
#                         province_id = 874
#                         province_id = 876
#                         province_id = 886
#                         province_id = 888
#                         province_id = 898
#                         province_id = 918
#                         province_id = 956
#                         province_id = 965
#                         province_id = 971
#                         province_id = 994
#                     }
#                     NOT = {
#                         province_has_center_of_trade_of_level = 1
#                     }
#                     is_city = yes
#                 }
            
#                 add_building = marketplace
#                 log = "Adding marketplace to [This.GetName]"
#                 if = {
#                     limit = {
#                         NOT = {
#                             base_tax = 6
#                         }
#                     }
#                     add_base_tax = 6
#                 }
#                 if = {
#                     limit = {
#                         NOT = {
#                             base_production = 8
#                         }
#                     }
#                     add_base_production = 8
#                 }
#                 if = {
#                     limit = {
#                         NOT = {
#                             base_manpower = 3
#                         }
#                     }
#                     add_base_manpower = 3
#                 }
#             }
#         }
    
#         # Prevent Early European Colonization
#         if = {
#             limit = {
#                 NOT = {
#                     is_year = 1510
#                 }
#             }
    
#             every_country = {
#                 limit = {
#                     CAPITAL_SCOPE = {
#                         continent = europe
#                     }
#                 }
#                 every_province = {
#                     limit = {
#                         has_discovered = PREV
#                         OR = {
#                             superregion = south_elysia_superregion
#                             superregion = central_elysia_superregion
#                             superregion = west_elysia_superregion
#                             superregion = north_elysia_superregion
#                             superregion = northeast_elysia_superregion
#                             superregion = southeast_elysia_superregion
#                             superregion = carribean_superregion
#                             superregion = east_american_sea_superregion
#                             superregion = south_elysia_superregion
#                         }
#                     }
#                     undiscover_country = Prev
#                     log = "Forcing European Country: [Prev.GetName] to undiscover province: [This.GetName]."
    
#                     if = {
#                         limit = {
#                             owned_by = PREV
#                         }
#                         decolonize = THIS
#                         log = "Forcing European Country: [Prev.GetName] to decolonize province: [This.GetName]."
#                     }
#                 }
#             }
#         }
#     }
# }

get_paid_for_prov = {
	custom_tooltip = WE_RECEIVE_X_DUCATS_FOR_PROVINCE
	hidden_effect = {
		while = {
			limit = {
				check_variable = { which = payment_for_province value = 10000 }
			}
			add_treasury = 10000
			change_variable = { which = payment_for_province value = -10000 }
		}
		while = {
			limit = {
				check_variable = { which = payment_for_province value = 1000 }
			}
			add_treasury = 1000
			change_variable = { which = payment_for_province value = -1000 }
		}
		while = {
			limit = {
				check_variable = { which = payment_for_province value = 100 }
			}
			add_treasury = 100
			change_variable = { which = payment_for_province value = -100 }
		}
		while = {
			limit = {
				check_variable = { which = payment_for_province value = 10 }
			}
			add_treasury = 10
			change_variable = { which = payment_for_province value = -10 }
		}
		while = {
			limit = {
				check_variable = { which = payment_for_province value = 1 }
			}
			add_treasury = 1
			change_variable = { which = payment_for_province value = -1 }
		}
	}
}

set_time_til_next_prov_could_be_sold = {
	set_variable = { which = last_sell_year_variable which = year_of_last_sell } # this date is shown in description of the diplomatic action
	if = {	# Big Nation = 5 years cooldown
		limit = {
			OR = {
				num_of_cities = 30
				variable_arithmetic_trigger = {
					custom_tooltip = COMPARE_NUM_OF_PROVS
					export_to_variable = {
						which = our_num_of_provs
						value = trigger_value:num_of_cities
						who = FROM
					}
					export_to_variable = {
						which = their_num_of_provs
						value = trigger_value:num_of_cities
					}
					divide_variable = { which = their_num_of_provs value = 2 }
					NOT = { check_variable = { which = our_num_of_provs which = their_num_of_provs } }
				}
			}
		}
		add_country_modifier = {
			name = countdown_sold_prov
			duration = 1825
			hidden = yes
		}
		change_variable = { which = year_of_last_sell value = 5 }
	}
	else_if = {	# Medium Sized Nation = 10 years cooldown
		limit = {
			OR = {
				AND = {
					num_of_cities = 20
					NOT = { num_of_cities = 30 }
				}
				variable_arithmetic_trigger = {
					custom_tooltip = COMPARE_NUM_OF_PROVS
					export_to_variable = {
						which = our_num_of_provs
						value = trigger_value:num_of_cities
						who = FROM
					}
					export_to_variable = {
						which = their_num_of_provs
						value = trigger_value:num_of_cities
					}
					divide_variable = { which = their_num_of_provs value = 3 }
					NOT = { check_variable = { which = our_num_of_provs which = their_num_of_provs } }
				}
			}
		}
		add_country_modifier = {
			name = countdown_sold_prov
			duration = 3650
			hidden = yes
		}
		change_variable = { which = year_of_last_sell value = 10 }
	}
	else = {	# Small Nation = 15 years cooldown
		add_country_modifier = {
			name = countdown_sold_prov
			duration = 5475
			hidden = yes
		}
		change_variable = { which = year_of_last_sell value = 15 }
	}
	if = {
		limit = {
			is_month = 11
		}
		set_variable = { which = month_of_last_sell value = 12 }
	}
	else_if = {
		limit = {
			is_month = 10
		}
		set_variable = { which = month_of_last_sell value = 11 }
	}
	else_if = {
		limit = {
			is_month = 9
		}
		set_variable = { which = month_of_last_sell value = 10 }
	}
	else_if = {
		limit = {
			is_month = 8
		}
		set_variable = { which = month_of_last_sell value = 9 }
	}
	else_if = {
		limit = {
			is_month = 7
		}
		set_variable = { which = month_of_last_sell value = 8 }
	}
	else_if = {
		limit = {
			is_month = 6
		}
		set_variable = { which = month_of_last_sell value = 7 }
	}
	else_if = {
		limit = {
			is_month = 5
		}
		set_variable = { which = month_of_last_sell value = 6 }
	}
	else_if = {
		limit = {
			is_month = 4
		}
		set_variable = { which = month_of_last_sell value = 5 }
	}
	else_if = {
		limit = {
			is_month = 3
		}
		set_variable = { which = month_of_last_sell value = 4 }
	}
	else_if = {
		limit = {
			is_month = 2
		}
		set_variable = { which = month_of_last_sell value = 3 }
	}
	else_if = {
		limit = {
			is_month = 1
		}
		set_variable = { which = month_of_last_sell value = 2 }
	}
	else = {
		set_variable = { which = month_of_last_sell value = 1 }
	}
}

save_year_of_last_sell = {
	# Save current year in one variable
	export_to_variable = { which = year_of_last_sell value = trigger_value:is_year }
	change_variable = { which = year_of_last_sell value = -1 }
}